#include<bits/stdc++.h>
using namespace std;
//给你n根火柴棍，你可以拼出多少个形如“A + B = C”的等式？
//等式中的A、B、C是用火柴棍拼出的整数（若该数非零，则最高位不能是00）
//用火柴棍拼数字0 - 9的对应如下所示：0->6根,1->2根,2->5根,3->5根
//4->4根,5->5根,6->6根,7->3根,8->7根,9->6根
//n根火柴全部用完，+和=各用俩根
int a[1000] = { 0 };
int main() {
	a[0] = 6, a[1] = 2, a[2] = 5, a[3] = 5, a[4] = 4, a[5] = 5, a[6] = 6, a[7] = 3, a[8] = 7, a[9] = 6;
	int n, ans = 0;//n<25
	cin >> n;
	n = n - 4;//+和=要4个
	for (int i = 10; i < 1000; i++) {//拼出某个数所需的火柴数
		int tem = i;
		while (tem >= 1) {
			a[i] += a[tem % 10];
			tem = tem / 10;
		}
		if (a[i] >= 25) {
			a[i] = 0;
			break;
		}
	}
	//先将边界值设置为很大的值如10000,测试n取最大值时的结果值
	// 再查看其等式的加数，n=24时ans=128，最后的等式为711+0=711,因此可以减小边界值避免RE
	for (int i = 0; i < 1000; i++) {//A
		for (int j = 0; j < 1000; j++) {//B
			if (a[i] + a[j] + a[i + j] == n && a[i + j] != 0) {//C
				cout << i << "+" << j << "=" << i + j << endl;
				ans++;
			}
		}
	}
	cout << ans;
	return 0;
}